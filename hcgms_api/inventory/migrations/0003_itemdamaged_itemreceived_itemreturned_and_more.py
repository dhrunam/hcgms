# Generated by Django 4.1.7 on 2023-03-22 09:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('configuration', '0009_applicabletaxdetails'),
        ('inventory', '0002_iteminstock_batch_no'),
    ]

    operations = [
        migrations.CreateModel(
            name='ItemDamaged',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.IntegerField(default=0)),
                ('quantity_damaged', models.IntegerField(default=0)),
                ('remarks', models.CharField(default='', max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_damaged', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_damaged', to='inventory.item')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_damaged', to='configuration.property')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReceived',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.CharField(max_length=128)),
                ('opening_balance', models.IntegerField(default=0)),
                ('quantity_received', models.IntegerField(default=0)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('remarks', models.CharField(default='', max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_received', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_received', to='inventory.item')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_received', to='configuration.property')),
            ],
        ),
        migrations.CreateModel(
            name='ItemReturned',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.IntegerField(default=0)),
                ('quantity_returned', models.IntegerField(default=0)),
                ('remarks', models.CharField(default='', max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_returned', to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_returned', to='inventory.item')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_returned', to='configuration.property')),
            ],
        ),
        migrations.CreateModel(
            name='ItemStockInProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.IntegerField(default=0)),
                ('received', models.IntegerField(default=0)),
                ('damaged', models.IntegerField(default=0)),
                ('returned', models.IntegerField(default=0)),
                ('transferred', models.IntegerField(default=0)),
                ('min_level', models.IntegerField(default=0)),
                ('max_level', models.IntegerField(default=0)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_in_property', to='inventory.item')),
                ('property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_in_property', to='configuration.property')),
            ],
        ),
        migrations.CreateModel(
            name='ItemTransferred',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_balance', models.IntegerField(default=0)),
                ('quantity_transferred', models.IntegerField(default=0)),
                ('remarks', models.CharField(default='', max_length=1024, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_ack_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_transferred_by', to=settings.AUTH_USER_MODEL)),
                ('from_property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_transferred_from', to='configuration.property')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.item')),
                ('to_property', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='item_transferred_to', to='configuration.property')),
            ],
        ),
        migrations.DeleteModel(
            name='ItemInStock',
        ),
        migrations.AddConstraint(
            model_name='itemstockinproperty',
            constraint=models.UniqueConstraint(fields=('property', 'item'), name='unique_item_of_property'),
        ),
    ]
